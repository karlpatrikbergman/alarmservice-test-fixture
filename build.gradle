group 'com.infinera.metro.service.alarm.acceptance'
version currentVersion

buildscript {
    ext {
        springBootVersion = '1.4.1.RELEASE'
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.4.7'
    }
}

apply plugin: 'com.jfrog.artifactory'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'java'

compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

/** Test settings **/
test {
    //Show that tests are run in the command-line output
    testLogging {
        events 'started', 'passed'
    }
}

/** Artifactory settings **/
//artifactory {
//    resolve {
//        contextUrl = "${artifactory_contextUrl}" //The base Artifactory URL for the resolver
//        repository {
//            repoKey = 'libs-snapshot-local'     //The Artifactory (preferably virtual) repository key to resolve from
//            username = "${artifactory_user}"                //Optional resolver user name (leave out to use anonymous resolution)
//            password = "${artifactory_password}"             //The resolver password
//            //maven = true                      //Resolve Maven-style artifacts and descriptors (true by default)
//        }
//    }
//}

/** Repository settings **/
repositories {
//    jcenter() //This repo is very slow, avoid if you can!
    mavenCentral()
    mavenLocal()
    maven { url "https://jitpack.io" } //Get a git project into build
}

task listrepos << {
    println "Repositories:"
    project.repositories.each { println "Name: " + it.name + "; url: " + it.url }
}

/** Dependency settings **/
dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-test")
    compile ("org.apache.httpcomponents:httpclient:4.5.2")
    compile("org.projectlombok:lombok:1.16.10")
    compile("ma.glasnost.orika:orika-core:1.4.6")

    compile('com.github.karlpatrikbergman:alarmservice:master-SNAPSHOT')
    compile('com.github.karlpatrikbergman:java-utilities:master-SNAPSHOT')
    compile('com.github.karlpatrikbergman:docker-compose-file-parser:master-SNAPSHOT')
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}