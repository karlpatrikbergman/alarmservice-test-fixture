apply plugin: 'java'
compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}
apply plugin: 'idea'
apply plugin: 'docker'

group 'se.infinera.metro.service.alarm'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

group 'se.infinera.metro.service.acceptance.alarm'
version '1.0-SNAPSHOT'

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'se.infinera.metro.service.alarm.MainApp'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task buildDocker(type: Docker, dependsOn: build) {
//    push = true
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    addFile('src/main/docker/entrypoint.sh', '/entrypoint.sh')
    addFile('src/main/docker/wait-for-it.sh', '/wait-for-it.sh')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

test {
    //Show that tests are run in the command-line output
    testLogging {
        events 'started', 'passed'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://jitpack.io" } //Get a git project into build
}

dependencies {
    compile 'se.infinera.metro.service.alarm:alarmservice-api:1.0-SNAPSHOT'
    compile('org.springframework.boot:spring-boot-starter-web:1.4.0.RELEASE')
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
    compile('com.github.karlpatrikbergman:java-utilities:master')
    compile('org.projectlombok:lombok:1.16.10')
    compile 'com.github.karlpatrikbergman:java-utilities:master'

    compile("org.springframework.boot:spring-boot-starter-test:1.4.0.RELEASE")
    compile group: 'junit', name: 'junit', version: '4.12'
}